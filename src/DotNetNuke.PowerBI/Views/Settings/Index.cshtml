@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<DotNetNuke.PowerBI.Controllers.SettingsController.SettingsModel>
@using System.Web.Mvc
@using DotNetNuke.Web.Mvc.Helpers
@using DotNetNuke.Web.Client.ClientResourceManagement
@{
    ClientResourceManager.RegisterScript(Dnn.DnnPage, "~/DesktopModules/MVC/PowerBIEmbedded/scripts/module-settings.js", 25, "DnnPageHeaderProvider");
    ClientResourceManager.RegisterStyleSheet(Dnn.DnnPage, "~/DesktopModules/MVC/PowerBIEmbedded/Css/module.css", 9, "DnnPageHeaderProvider");
}
@using DotNetNuke.UI.Utilities
@using DotNetNuke.Common.Utilities

<div id="PowerBISettings" class="dnnForm">
    <div class="dnnFormExpandContent"><a href="">@Dnn.LocalizeString("ExpandAll")</a></div>
    <h2 class="dnnFormSectionHead"><a href="#">Workspace Settings</a></h2>
    <fieldset id="ListViewGroupSettings">
        <div class="dnnFormItem">
            <div class="leftGroup">
                <label>Workspace</label>
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    foreach (var settingsGroup in ViewBag.Settings)
                    {
                        listItems.Add(new SelectListItem
                        {
                            Text = settingsGroup.SettingsGroupName,
                            Value = settingsGroup.SettingsGroupId
                        });

                    }
                }
                @Html.DropDownListFor(m => m.SettingsGroupId, listItems, "(Default workspace)")
            </div>
        </div>
        @{
            if (Model.IsContentView)
            {
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Content Item</label>
                        @{
                            var contentItems = new List<SelectListItem>();
                            if (ViewBag.ContentItems != null)
                            {
                                foreach (var contentItem in ViewBag.ContentItems.Dashboards)
                                {
                                    contentItems.Add(new SelectListItem
                                    {
                                        Text = "Dashboard - " + contentItem.DisplayName,
                                        Value = "D_" + contentItem.Id
                                    });
                                }
                                foreach (var contentItem in ViewBag.ContentItems.Reports)
                                {
                                    contentItems.Add(new SelectListItem
                                    {
                                        Text = "Reports - " + contentItem.Name,
                                        Value = "R_" + contentItem.Id
                                    });
                                }
                            }
                        }
                        @Html.DropDownListFor(m => m.ContentItemId, contentItems, "Choose one...")
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Report Section Name</label>
                        @Html.TextBoxFor(m => m.PageName)
                    </div>
                </div>

                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Height</label>
                        @Html.TextBoxFor(m => m.Height, new { @class = "number" })
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Override Filter Pane Visibility</label>
                        @Html.CheckBoxFor(m => m.OverrideFilterPaneVisibility, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Filter Pane Visible</label>
                        @Html.CheckBoxFor(m => m.FilterPaneVisible, true)
                    </div>
                </div>
                //
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Nav Pane Visible</label>
                        @Html.CheckBoxFor(m => m.NavPaneVisible, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Override Visual Header Visibility</label>
                        @Html.CheckBoxFor(m => m.OverrideVisualHeaderVisibility, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Visual Header Visible</label>
                        @Html.CheckBoxFor(m => m.VisualHeaderVisible, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Hide Visualizers and Data when editing</label>
                        @Html.CheckBoxFor(m => m.HideVisualizationData, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Show Subscriptions</label>
                        @Html.CheckBoxFor(m => m.ShowSubscription, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Toolbar Visible</label>
                        @Html.CheckBoxFor(m => m.ToolbarVisible, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Print Visible</label>
                        @Html.CheckBoxFor(m => m.PrintVisible, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Full Screen Visible</label>
                        @Html.CheckBoxFor(m => m.FullScreenVisible, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Bookmarks Visible</label>
                        @Html.CheckBoxFor(m => m.BookmarksVisible, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Enable Application Insights (require AppInsights module enabled)</label>
                        @Html.CheckBoxFor(m => m.ApplicationInsightsEnabled, true)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Background Image URL</label>
                        @Html.TextBoxFor(m => m.BackgroundImageUrl)
                    </div>
                </div>
            }
        }
    </fieldset>
    <h2 class="dnnFormSectionHead"><a href="#">Role Level Security (RLS)</a></h2>
    <fieldset id="ListViewGroupSettings">
        @{
            if (Model.IsContentView)
            {
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>User Property</label>
                        @{
                            var userPropertiesItems = new List<SelectListItem>();
                            if (ViewBag.UserProperties != null)
                            {
                                foreach (var userProperty in ViewBag.UserProperties)
                                {
                                    userPropertiesItems.Add(new SelectListItem
                                    {
                                        Text = userProperty,
                                        Value = userProperty
                                    });
                                }
                            }
                        }
                        @Html.DropDownListFor(m => m.UserProperty, userPropertiesItems, "Choose one...")
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Custom user profile property</label> 
                        @Html.TextBoxFor(m => m.CustomUserProperty)
                    </div>
                </div>
                <div class="dnnFormItem">
                    <div class="leftGroup">
                        <label>Custom extension library</label>
                        @Html.TextBoxFor(m => m.CustomExtensionLibrary)
                    </div>
                </div>
            }
        }
    </fieldset>

</div>

<script type="text/javascript">

    jQuery(function ($) {
        var setupModule = function () {
            $('#PowerBISettings').dnnPanels();
            $('#PowerBISettings .dnnFormExpandContent a').dnnExpandAll({
                targetArea: '#PowerBISettings'
            });
        };
        setupModule();
        Sys.WebForms.PageRequestManager.getInstance().add_endRequest(function () {
            setupModule();
        });

        var context = {
            PortalId: parseInt('@Dnn.ActiveModule.PortalID'),
            ModuleId: parseInt('@Dnn.ActiveModule.ModuleID'),
            TabId: parseInt('@Dnn.ActiveModule.TabID'),
        };

        // Initialize
        var settings = new app.settings(context);
        settings.init();
    });
</script>
